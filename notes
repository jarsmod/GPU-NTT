Mon Oct 16 10:40:00 AM +03 2023

git push -u origin testing

#- Testing
- MODULAR_REDUCTION_TYPE=0 -> Barrett Reduction(64 bit)
- MODULAR_REDUCTION_TYPE=1 -> Goldilocks Reduction(64 bit)
- MODULAR_REDUCTION_TYPE=2 -> Plantard Reduction(64 bit)

#= build from root dir
$ cmake . -D CMAKE_CUDA_ARCHITECTURES=86 -D MODULAR_REDUCTION_TYPE=1 -B./bbuild && ( cd bbuild && make; )

#= build for chosen modular reduction
$ mkdir -p bbuild/{0,1,2}                                                                                       
$ MTYP=0; cmake . -D CMAKE_CUDA_ARCHITECTURES=86 -D MODULAR_REDUCTION_TYPE=$MTYP -B./bbuild/$MTYP && ( cd bbuild/$MTYP && make; )

#= test for given ring size and other ring sizes
./test_ntt_cpu 12 1
for i in `seq 12 2 26`; do echo "i: $i"; ./bbuild/test_ntt_gpu $i 1 2>&1 | tee -a logs/test-ntt-gpu.log; done; # testing for different ring sizes

#=
(for i in `seq 12 2 26`; do for b in `seq 2 2 8`; do  echo -e "\nring: $i, batch: $b"; ./bbuild/test_ntt_gpu $i $b; done; done;) 2>&1 | tee -a logs/test-ntt-gpu-`date +"%Y-%-m-%d_%H-%M"`.log

#= build and execute for specified mod type and test over i rings, b batches
MTYP=1; cmake . -D CMAKE_CUDA_ARCHITECTURES=86 -D MODULAR_REDUCTION_TYPE=$MTYP -B./bbuild/$MTYP && ( cd bbuild/$MTYP && make; )
MTYP=1; (for i in `seq 12 2 26`; do for b in `seq 2 2 8`; do  echo -e "\nring: $i, batch: $b"; ./bbuild/$MTYP/test_ntt_gpu $i $b; done; done;) 2>&1 | tee -a logs/test-ntt-gpu-${MTYP}-`date +"%Y-%-m-%d_%H-%M"`.log #run expt for specf mod type

#=
